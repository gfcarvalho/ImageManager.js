{"name":"ImageManager.js","tagline":"An easy to use, small and standalone but powerful and complex library that gives you amazing control of your image assets by preloading, caching and managing it.","body":"###ImageManager.js\r\n[![Code Climate](https://codeclimate.com/github/gfcarvalho/ImageManager.js.png)](https://codeclimate.com/github/gfcarvalho/ImageManager.js)\r\n\r\nBy [Gustavo Carvalho](@gfcarvalho)\r\n\r\nGet total control of the images on your page !\r\n\r\n###Features\r\n- Tag loading and eased progress information\r\n- Event oriented\r\n- After loaded, all images will be accessible through a cache object\r\n- Create independent load tasks\r\n\r\n###Example:\r\n\r\nPreload a set of images, show the loading progress using the progress element and draw it on a canvas when load finishes:\r\n\r\n```js \r\n    var images = [{\r\n        name: \"bkg\",\r\n        src: \"img/background.png\"\r\n    }, {\r\n        name: \"frg\",\r\n        src: \"img/foreground.png\"\r\n    }, {\r\n        name: \"player\",\r\n        src: \"img/player.png\"\r\n    }];\r\n    \r\n    var progressElem = document.getElementById('progress');\r\n    var canvasContext = document.getElementById('canvas').getContext('2d');\r\n\r\n    function onComplete(e) {\r\n        var status = e.status; // OK : all images successfully downloaded,\r\n                               // FAIL : one or more image has failed to download      \r\n                               // ABORTED : one or more images weren't downloaded because user clicked on X button\r\n        \r\n        var cache = ImageManager.cache; // retrieve the cache\r\n        \r\n        if (status === ImageManager.OK) {\r\n            // draw images on canvas\r\n            canvasContext.drawImage(cache.bkg, 0, 0);\r\n            canvasContext.drawImage(cache.frg, 0, 300);\r\n            canvasContext.drawImage(cache.player, 50, 400);\r\n        } else {\r\n            // notify the user and ask to reload the page\r\n            if(confirm('Error on load images. Reload the page to try again?')) {\r\n                window.location.reload();\r\n            }\r\n        }\r\n    }\r\n    \r\n    function onProgress(progress) {\r\n        progressElem.value = progress;\r\n        progressElem.innerHTML = 'Loading...' + progress + '%';\r\n    }\r\n\r\n    ImageManager.load(images, onComplete, onProgress); // start the loading process\r\n    \r\n```\r\n\r\n### Future\r\nOnline documentation and much more examples will come soon.\r\n\r\n### Support or Contact\r\nHaving trouble with ImageManager.js? Since the online documentation is not ready please contact gfcarv@gmail.com and Iâ€™ll help you sort it out.","google":"UA-49344056-1","note":"Don't delete this file! It's used internally to help with page regeneration."}